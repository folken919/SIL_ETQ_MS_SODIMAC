apiVersion: v1
kind: Template
labels:
  template: sodimac-netcore
metadata:
  annotations:
    description: NetCore for Sodimac.
    iconClass: icon-rh-logistica
    openshift.io/display-name: Sodimac Development with netcore
    openshift.io/provider-display-name: Sodimac.
    tags: netcore
    version: "1"
  name: sodimac-netcore
  namespace: #{System.Project}#
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        app.openshift.io/vcs-ref: #{BRANCH_QA}#
        app.openshift.io/vcs-uri: #{System.Repo}#
      generation: 3
      labels:
        app: #{System.ServiceName}#
        app.kubernetes.io/component: #{System.ServiceName}#
        app.kubernetes.io/instance: #{System.ServiceName}#
        app.kubernetes.io/part-of: #{System.Application}#
      name: #{System.ServiceName}#
      namespace: #{System.Project}#
    spec:
      replicas: 1
      selector:
        app: #{System.ServiceName}#
        deploymentconfig: #{System.ServiceName}#
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 120
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: #{System.ServiceName}#
            deploymentconfig: #{System.ServiceName}#
        spec:
          containers:
            - image: image-registry.openshift-image-registry.svc:5000/#{System.Project}#/#{System.ServiceName}#:#{Build.BuildId}#
              env:
                - name: DB_DATA_HOST
                  value: #{HOST_QA}#
                - name: DB_DATA_PORT
                  value: #{PORT_QA}#
                - name: DB_DATA_USER
                  value: #{DATA_USER}#
              imagePullPolicy: Always
              name: #{System.ServiceName}#
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        app.openshift.io/vcs-ref: #{BRANCH_QA}#
        app.openshift.io/vcs-uri: #{System.Repo}#
      labels:
        app: #{System.ServiceName}#
        app.kubernetes.io/component: #{System.ServiceName}#
        app.kubernetes.io/instance: #{System.ServiceName}#
        app.kubernetes.io/part-of: #{System.Application}#
      name: #{System.ServiceName}#
      namespace: #{System.Project}#
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: #{System.ServiceName}#
        deploymentconfig: #{System.ServiceName}#
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      annotations:
        app.openshift.io/vcs-ref: #{BRANCH_QA}#
        app.openshift.io/vcs-uri: #{System.Repo}#
        openshift.io/host.generated: "true"
      labels:
        app: #{System.ServiceName}#
        app.kubernetes.io/component: #{System.ServiceName}#
        app.kubernetes.io/instance: #{System.ServiceName}#
        app.kubernetes.io/part-of: #{System.Application}#
      name: #{System.ServiceName}#
      namespace: #{System.Project}#
    spec:
      host: #{System.ServiceName}#-#{System.Project}#.apps.openshiftqa.sodimacpr.corp
      port:
        targetPort: 8080-tcp
      haproxy.router.openshift.io/timeout: 360s 
      haproxy.router.openshift.io/timeout-tunnel: 360s
      openshift.io/host.generated: "true"
      subdomain: ""
      to:
        kind: Service
        name: #{System.ServiceName}#
        weight: 100
      wildcardPolicy: None